name: Prod
on:
  push:
    tags:
      - v*
env:
  PROJECT_ID: qoodish
  REGION: asia-northeast1
  ARTIFACT_REGISTRY: asia-northeast1-docker.pkg.dev
  SERVICE_NAME: qoodish-api
  JOB_NAME: qoodish-runner

jobs:
  build-and-push-image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/438842534630/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@qoodish-common.iam.gserviceaccount.com
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ARTIFACT_REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          tags: |
            type=ref,event=tag,prefix=,suffix=
            type=sha,prefix=,suffix=,format=long
      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-runner:
    needs:
      - build-and-push-image
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/438842534630/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@qoodish-common.iam.gserviceaccount.com
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Deploy Job using kustomize
        working-directory: run/prod/runner
        env:
          IMAGE_URL: ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.ref_name }}
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1
        run: |
          echo "Setting image to $IMAGE_URL"
          kustomize edit set image IMAGE_PLACEHOLDER=$IMAGE_URL

          echo "--- Generated job manifest ---"
          kustomize build .
          echo "----------------------------"

          kustomize build . | gcloud beta run jobs replace - \
            --project=$PROJECT_ID \
            --region=$REGION

  deploy-api:
    needs:
      - build-and-push-image
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: projects/438842534630/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@qoodish-common.iam.gserviceaccount.com
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      - name: Set Cloud Run tag from Git tag
        id: normalize
        run: |
          NORMALIZED_TAG=$(echo "${{ github.ref_name }}" | sed -e 's/\./-/g')
          echo "tag=$NORMALIZED_TAG" >> $GITHUB_OUTPUT
          echo "Normalized tag: $NORMALIZED_TAG"
      - name: Deploy Service using kustomize
        working-directory: run/prod/api
        env:
          IMAGE_URL: ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.ref_name }}
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1
        run: |
          echo "Setting image to $IMAGE_URL"
          kustomize edit set image IMAGE_PLACEHOLDER=$IMAGE_URL

          echo "--- Generated service manifest ---"
          kustomize build .
          echo "----------------------------------"

          kustomize build . | gcloud beta run services replace - \
            --project=$PROJECT_ID \
            --region=$REGION
      - name: Update traffic tag to the new revision
        env:
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1
        run: |
          gcloud beta run services update-traffic ${{ env.SERVICE_NAME }} \
            --update-tags=${{ steps.normalize.outputs.tag }}=LATEST \
            --project=$PROJECT_ID \
            --region=$REGION
