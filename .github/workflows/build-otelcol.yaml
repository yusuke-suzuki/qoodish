name: Build and Push OpenTelemetry Collector Image

on:
  workflow_dispatch:
    inputs:
      project_id:
        description: Target Google Cloud project ID
        required: true
        type: choice
        options:
          - qoodish-dev
          - qoodish
        default: qoodish-dev
      tag:
        description: Image tag to apply
        required: true
        default: latest
  push:
    branches:
      - main
    paths:
      - "otelcol-google/**"

env:
  ARTIFACT_REGISTRY: asia-northeast1-docker.pkg.dev
  GAR_REPOSITORY: qoodish-common
  IMAGE_NAME: otelcol

jobs:
  build-and-push:
    name: Build and Push otelcol Image
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Set project ID
        run: echo "PROJECT_ID=${{ github.event.inputs.project_id || 'qoodish-dev' }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/438842534630/locations/global/workloadIdentityPools/github-actions/providers/github-actions
          service_account: github-actions@qoodish-common.iam.gserviceaccount.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ARTIFACT_REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ARTIFACT_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=sha,prefix=,suffix=,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./otelcol-google
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
